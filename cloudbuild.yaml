# cloudbuild.yaml
logsBucket: 'gs://apigee-sdlc-demo_cloudbuild'

steps:
  # Step 1: Install Node.js and npm (using a specific Node.js version)
  - name: 'node'  # Use a specific Node.js version (20 or higher)
    entrypoint: 'npm'
    args: ['install', '-g', 'npm@latest']  # Optional: Ensure latest npm (might not be necessary)
    env:
      - 'NPM_CONFIG_UPDATE_NOTIFIER=false' # Suppress npm update messages

  # Step 2: Install apigeelint
  - name: 'node'  # Use the same Node.js version
    entrypoint: 'npm'
    args: ['install', '-g', 'apigeelint']

  # --- DIAGNOSTIC STEPS ---

  # Diagnostic Step D: Attempt to find apigeelint executable
  - name: 'node'
    entrypoint: 'bash'
    args:
      - '-c'
      - 'which apigeelint || echo "apigeelint not found in PATH"'
    id: 'which-apigeelint'
  
  # Diagnostic Step E: List contents of /usr/local/bin/
  - name: 'node'
    entrypoint: 'bash'
    args:
      - '-c'
      - 'ls -l /usr/local/bin/'
    id: 'list-bin'
  
  # Diagnostic Step F: Find npm global root
  - name: 'node'
    entrypoint: 'npm'
    args: ['root', '-g']
    id: 'npm-global-root'

  # Diagnostic Step H: List contents of global node_modules directory
  - name: 'node'
    entrypoint: 'bash'
    args:
      - '-c'
      - 'ls -l /usr/local/lib/node_modules'
    id: 'list-global-node-modules'

  # Diagnostic Step I: Get npm config prefix (actual global install location)
  - name: 'node'
    entrypoint: 'npm'
    args: ['config', 'get', 'prefix']
    id: 'npm-config-prefix'

  # Step 3: Run apigeelint
  - name: 'node'  # Use the same Node.js version
    entrypoint: 'bash'  # Use bash to execute a command with the full path
    args:
      - '-c'
      - '/usr/local/lib/node_modules/apigeelint/bin/apigeelint -s /home/andrew/apigee-proxies/apiproxy -f table.js'
