# cloudbuild.yaml
logsBucket: 'gs://apigee-sdlc-demo_cloudbuild'

steps:
  # Step 1: Install Node.js and npm (using a specific Node.js version)
  - name: 'node'  # Use a specific Node.js version (20 or higher)
    entrypoint: 'npm'
    args: ['install', '-g', 'npm@latest']  # Optional: Ensure latest npm (might not be necessary)
    env:
      - 'NPM_CONFIG_UPDATE_NOTIFIER=false' # Suppress npm update messages

  # Step 2: Install apigeelint
  - name: 'node'  # Use the same Node.js version
    entrypoint: 'npm'
    args: ['install', '-g', 'apigeelint']

   # --- DIAGNOSTIC STEPS ---

  # Diagnostic Step A: Find out where npm thinks global packages are installed
  - name: 'node'
    args: ['root', '-g']
    id: 'npm-global-root'

  # Diagnostic Step B: List contents of the global node_modules directory
  - name: 'node' # Or any image with 'ls' and 'cat'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        GLOBAL_NPM_ROOT=$(npm root -g)
        echo "Global npm root: $GLOBAL_NPM_ROOT"
        echo "Contents of global node_modules:"
        ls -la "$GLOBAL_NPM_ROOT" || true # Use || true to prevent build from failing if dir not found
    id: 'list-global-modules'

  # Diagnostic Step D: Attempt to find apigeelint executable
  - name: 'node'
    entrypoint: 'bash'
    args:
      - '-c'
      - 'which apigeelint || echo "apigeelint not found in PATH"'
    id: 'which-apigeelint'

  # Step 3: Run apigeelint
  - name: 'node'  # Use the same Node.js version
    entrypoint: '/usr/local/bin/apigeelint'  # Use the standard global install location
    args:
      - '-s'
      - '/home/andrew/apigee-proxies/apiproxy'
      - '-f'
      - 'table.js'